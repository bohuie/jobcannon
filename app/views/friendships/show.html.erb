<!DOCTYPE html>
<meta charset="utf-8">
<script src="http://d3js.org/d3.v2.js?2.9.1"></script>
<style>

.link {
  fill: none;
  stroke: #666;
  stroke-width: 1.5px;
  stroke-opacity: 0.4;
}

.node circle {
  fill: #ccc;
  stroke: #000;
  stroke-width: 4.0px;
}

.node{
  opacity: 1;
}

text {
  font: 12px sans-serif;
  pointer-events: none;
  opacity: 1;
}

</style>
<svg id="mySvg" width="80" height="80">
  <defs id="mdef">
    <pattern id="image" x="0" y="0" height="50" width="50">
      <image x="0" y="0" width="50" height="50" xlink:href="/system/photos/photos/000/000/001/original/henry.png?1403331655"></image>
    </pattern>
  </defs>
</svg>
<body>
  <div class = "row" id = "body-row" style = "height: 450px; padding: 0;">
    <div class = "col-md-10" id = "body-col" style = "padding: 0;">
      <div id = "display" style = "width: 100%; height: 100%;">
        <script>
        var links = <%= @friendships.to_s.html_safe %>
        var nodes = {};
        var linkedByIndex = {};
        // Compute the distinct nodes from the links.
        links.forEach(function(link) {
          link.source = nodes[link.source] || (nodes[link.source] = {name: link.source, 
                                                                    id: link.sourceid,
                                                                    skills: link.sourceskills,
                                                                    photo: link.sourcephoto, 
                                                                    email: link.sourceemail,
                                                                    references: link.sourcereferences,
                                                                    experiences: link.sourceexperiences});
          link.target = nodes[link.target] || (nodes[link.target] = {name: link.target, 
                                                                    id: link.targetid,
                                                                    skills: link.targetskills,
                                                                    photo: link.targetphoto,
                                                                    email: link.targetemail,
                                                                    references: link.targetreferences,
                                                                    experiences: link.targetexperiences});
          linkedByIndex[link.source.name + "," + link.target.name] = 1;
          linkedByIndex[link.target.name + "," + link.source.name] = 1;
        });
        var width = $('#body-col').width(),
            height = $('#body-row').height();

        var svg = d3.select("#display").append("svg")
            .attr("width", width)
            .attr("height", height);

        var force = d3.layout.force()
          .nodes(d3.values(nodes))
          .links(links)
          .size([width, height])
          .linkDistance(175)
          .charge(-500)
          .on("tick", tick)
          .start();

        var link = svg.selectAll(".link")
            .data(force.links())
            .enter().append("line")
            .attr("class", "link");

        var node = svg.selectAll(".node")
            .data(force.nodes())
            .enter().append("g")
            .attr("class", "node")
            .on("click", click)
            .call(force.drag);
        
          node.append("circle")
         .attr("r", 25)
         .style("fill", "url(#image)");
        
        node.append("text")
            .attr("x", -36)
            .attr("y", -36)
            .text(function(d) { return d.name; });

        function tick() {
          link
              .attr("x1", function(d) { return d.source.x; })
              .attr("y1", function(d) { return d.source.y; })
              .attr("x2", function(d) { return d.target.x; })
              .attr("y2", function(d) { return d.target.y; });

          node
              .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
        }
        

        function click() {
          if(d3.select(this).select("circle").attr("fill") == "rgb(150, 50, 0)"){
            d3.select(this).select("circle").transition()
                .style("fill", "#ccc");
            unhighlightFriends(this);
            hideProfile(this)
          }
          else{
            d3.selectAll(".node").select("circle").transition()
              .style("fill", "#ccc")
            d3.selectAll(".node").select("text").transition()
              .duration(250)
              .style("opacity", 1);
            d3.select(this).select("circle").transition()
                .duration(250)
                .style("fill", "rgb(150, 50, 0)")
            d3.select(this).select("text").transition()
                .duration(250)
                .style("opacity", 0);
            highlightFriends(this);
            showProfile(this)
          }
        }

        function unhighlightFriends(p1){
          var current = d3.select(p1);
          d3.selectAll('.node').each(function(e){
              var other = d3.select(this)
              if(linkedByIndex[current.select("text").text() + "," + other.select("text").text()])
                other.select("circle").transition()
                  .style("fill", "#ccc");
            });
        }

        function highlightFriends(p1){
          var current = d3.select(p1);
          d3.selectAll('.node').each(function(e){
              var other = d3.select(this)
              if(linkedByIndex[current.select("text").text() + "," + other.select("text").text()])
                  other.select("circle").transition().style("fill", "yellow");
            });
        }

        function showProfile(p1){
          var current = nodes[d3.select(p1).select("text").text()]
          console.log(nodes[d3.select(p1).select("text").text()]);
          document.getElementById("profile_header").innerHTML="<div class = row><div class = col-md-6><h2>"+current.name+"</h2></div><div style = width:64px;height:64px;padding:0; class = col-md-6><img src="+current.photo+" style = width:64px;height:64px; /></div></div> <div class = row><div class = col-md-6>"+current.email+"</div></div>";
          var skillHTML = "<div class = row><h2 style= margin:0> Skills </h2></div>"
          for (i = 0; i < current.skills.length; i++) { 
              skillHTML += "<div class = row>" + current.skills[i].label + "</div>"
          }
          document.getElementById("skills_information").innerHTML=skillHTML;
          var skillHTML = "<div class = row><h2 style= margin:0> References </h2></div>"
          for (i = 0; i < current.references.length; i++) { 
              skillHTML += "<div class = row>" + current.references[i].label + "</div>"
          }
          document.getElementById("references_information").innerHTML=skillHTML;
          var skillHTML = "<div class = row><h2 style= margin:0> Experiences </h2></div>"
          for (i = 0; i < current.experiences.length; i++) { 
              skillHTML += "<div class = row>" + current.experiences[i].label + "</div>"
          }
          document.getElementById("experiences_information").innerHTML=skillHTML;
        }


        function hideProfile(p1){
          document.getElementById("profile_header").innerHTML="";
          document.getElementById("skills_information").innerHTML="";
          document.getElementById("references_information").innerHTML="";
          document.getElementById("experiences_information").innerHTML="";

        }

        </script>
      </div>
    </div>
    <div class = "col-md-2">
      <div class = "row" style = "padding: 10px;">
        Search by Name
        <%= simple_form_for NetworkSearch.new, :html => { :id => "nameSearch" }, :controller => "NetworkSearch", :action => "create" , remote: true do |f| %>
          <div class = "col-md-12" style = "padding-left: 30px; padding-right: 0px; height: auto;">
            <%= f.text_field :query, :autocomplete => "off", :autofocus => true, style: "height: 10px;" %>
          </div>
          <%= f.hidden_field :user_id, :value => @user.user_id %>
          <%= f.hidden_field :type, :value => "name" %>
        <% end %>
      </div>
      <div class = "row" style = "padding: 10px;">
        Search by Skill
        <%= simple_form_for NetworkSearch.new, :html => { :id => "skillSearch" }, :controller => "NetworkSearch", :action => "create" , remote: true do |f| %>
          <div class = "col-md-12" style = "padding-left: 30px; padding-right: 0px; height: auto;">
            <%= f.text_field :query, :autocomplete => "off", :autofocus => true, style: "height: 10px;" %>
          </div>
          <%= f.hidden_field :user_id, :value => @user.user_id %>
          <%= f.hidden_field :type, :value => "skill" %>
        <% end %>
      </div>
    </div>
  </div>
  <div class = "row">
    <div class = "col-md-3">
      <div id = "profile_header">
      </div>
    </div>
    <div class = "col-md-2">
      <div id = "skills_information">
      </div>
    </div>
    <div class = "col-md-2">
      <div id = "references_information">
      </div>
    </div>
    <div class = "col-md-2">
      <div id = "experiences_information">
      </div>
    </div>
  </div>
</body>