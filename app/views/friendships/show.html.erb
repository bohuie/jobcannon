<!DOCTYPE html>
<meta charset="utf-8">
<script src="http://d3js.org/d3.v2.js?2.9.1"></script>
<style>

.link {
  fill: none;
  stroke: #666;
  stroke-width: 1.5px;
  stroke-opacity: 0.5;
}

.node circle {
  fill: #ccc;
  stroke: #000;
  stroke-width: 0.5px;
}

.node{
  opacity: 1;
}

text {
  font: 12px sans-serif;
  pointer-events: none;
}

</style>
<body>
  <div class = "row" id = "body-row" style = "height: 600px; padding: 0;">
    <div class = "col-md-8" id = "body-col" style = "padding: 0;">
      <div id = "display" style = "width: 100%; height: 100%;">
        <script>
        window.onload = function(){
          d3.selectAll(".node")
          .each(function(d){
              var current = d3.select(this)
              if(nodes[current.select("text").text()].id == <%=@user.user_id%>){
                current.select("circle").transition()
                  .attr("r", 16)
                  .style("fill", "#ADEBFF");
                current.select("text").transition()
                  .attr("x", -24)
                  .attr("y", 0);
                }
            });
        }
        
        var links = <%= @friendships.to_s.html_safe %>
        var nodes = {};
        var linkedByIndex = {};
        // Compute the distinct nodes from the links.
        links.forEach(function(link) {
          link.source = nodes[link.source] || (nodes[link.source] = {name: link.source, 
                                                                    id: link.sourceid,
                                                                    skills: link.sourceskills});
          link.target = nodes[link.target] || (nodes[link.target] = {name: link.target, 
                                                                    id: link.targetid,
                                                                    skills: link.targetskills});
          linkedByIndex[link.source.name + "," + link.target.name] = 1;
          linkedByIndex[link.target.name + "," + link.source.name] = 1;
        });

        var width = $('#body-col').width(),
            height = $('#body-row').height();

        var force = d3.layout.force()
            .nodes(d3.values(nodes))
            .links(links)
            .size([width, height])
            .linkDistance(80)
            .charge(-200)
            .on("tick", tick)
            .start();

        var svg = d3.select("#display").append("svg")
            .attr("width", width)
            .attr("height", height);

        var link = svg.selectAll(".link")
            .data(force.links())
            .enter().append("line")
            .attr("class", "link");

        var node = svg.selectAll(".node")
            .data(force.nodes())
            .enter().append("g")
            .attr("class", "node")
            .on("click", click)
            .call(force.drag);

        node.append("circle")
            .attr("r", 8);

        node.append("text")
            .attr("x", -12)
            .attr("y", -12)
            .text(function(d) { return d.name; });

        function tick() {
          link
              .attr("x1", function(d) { return d.source.x; })
              .attr("y1", function(d) { return d.source.y; })
              .attr("x2", function(d) { return d.target.x; })
              .attr("y2", function(d) { return d.target.y; });

          node
              .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
        }
        

        function click() {
          if(d3.select(this).select("circle").attr("r") == 32){
            d3.select(this).select("circle").transition()
                .duration(250)
                .attr("r", 8)
                .style("fill", "#ccc");
            d3.select(this).select("text").transition()
                .duration(250)
                .attr("x", -12)
                .attr("y", -12);
          }
          else{
            d3.select(this).select("circle").transition()
                .duration(250)
                .attr("r", 32)
                .style("fill", "#fff");
            d3.select(this).select("text").transition()
                .duration(250)
                .attr("x", -24)
                .attr("y", 0);
            highlightFriends(this);
            showProfile(this)
          }
        }

        function highlightFriends(p1){
          var current = d3.select(p1);
          d3.selectAll('.node').each(function(e){
              var other = d3.select(this)
              if(linkedByIndex[current.select("text").text() + "," + other.select("text").text()])
                other.select("circle").transition().
                  style("fill", "#ADEBFF");
            });
        }

        function showProfile(p1){
          var current = nodes[d3.select(p1).select("text").text()]
          console.log(nodes[d3.select(p1).select("text").text()]);
          document.getElementById("profile_header").innerHTML=current.name;
          var skillHTML = "<h2> Skills </h2> <ul>"
          for (i = 0; i < current.skills.length; i++) { 
              skillHTML += "<li>" + current.skills[i].label + "</li>"
          }
          skillHTML += "</ul>"
          document.getElementById("skills_information").innerHTML=skillHTML;
        }

        function blue(){
          d3.selectAll(".node").select("circle").transition()
            .duration(750)
            .style("fill", "#456");
        }

        function m(){
          d3.selectAll('.node')
          .each(function(d){
            var current = d3.select(this);
            if(current.select("text").text().indexOf("m") > -1 ||
              current.select("text").text().indexOf("M") > -1){
                current.select("circle").transition().style("fill", "red");
              }
            });
        }

        function degree3(){
          d3.selectAll('.node')
          .each(function(d){
            var current = d3.select(this);
            var count = 0;
            d3.selectAll('.node').each(function(e){
              var other = d3.select(this)
              if(linkedByIndex[current.select("text").text() + "," + other.select("text").text()])
                count++;
            });
            if(count > 2)
              current.select("circle").style("fill", "green");
          });
        }

        </script>
      </div>
    </div>
    <div class = "col-md-2">
      <div class = "row" style = "padding: 10px;">
        Options
      </div>
      <div class = "row" style = "padding: 10px;">
        <button class = "btn btn-small btn-primary" onClick = "m()">
          Highlight M nodes 
        </button>
      </div>
      <div class = "row" style = "padding: 10px;">
        <button class = "btn btn-small btn-primary" onClick = "blue()">
          Make all nodes blue        
        </button>
      </div>
      <div class = "row" style = "padding: 10px;">
        <button class = "btn btn-small btn-primary" onClick = "degree3()">
          Highlight > 3
        </button>
      </div>
    </div>
    <div class = "col-md-2">
      <div class = "row" style = "padding: 10px; visibility: none;" id = "profile_header">
      </div>
      <div class = "row" style = "padding: 10px;" id = "skills_information">
      </div>
    </div>
  </div>
</body>